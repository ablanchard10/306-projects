


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: **-UUU-*Your Names**update this***
                       
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 2/12/2018
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 8 Hz and a varying duty-cycle
    7 00000000         ;   Repeat the functionality from Lab3 but now we want y
                       ou to 
    8 00000000         ;   insert debugging instruments which gather data (stat
                       e and timing)
    9 00000000         ;   to verify that the system is functioning as expected
                       .
   10 00000000         ; Hardware connections (External: One button and one LED
                       )
   11 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
   12 00000000         ;  PE0 is LED output (1 activates external LED on protob
                       oard)
   13 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   14 00000000         ; You will only verify the variable duty-cycle feature o
                       f Lab 3 and not the "breathing" feature. 
   15 00000000         ; Instrumentation data to be gathered is as follows:
   16 00000000         ; After Button(PE1) press collect one state and time ent
                       ry. 
   17 00000000         ; After Buttin(PE1) release, collect 7 state and
   18 00000000         ; time entries on each change in state of the LED(PE0): 
                       
   19 00000000         ; An entry is one 8-bit entry in the Data Buffer and one
                        
   20 00000000         ; 32-bit entry in the Time Buffer
   21 00000000         ;  The Data Buffer entry (byte) content has:
   22 00000000         ;    Lower nibble is state of LED (PE0)
   23 00000000         ;    Higher nibble is state of Button (PE1)
   24 00000000         ;  The Time Buffer entry (32-bit) has:
   25 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   26 00000000         ; Note: The size of both buffers is 50 entries. Once you
                        fill these
   27 00000000         ;       entries you should stop collecting data
   28 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   29 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   30 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   31 00000000         
   32 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   33 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   34 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   35 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   36 00000000         
   37 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   38 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   39 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   40 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   41 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   42 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   43 00000000         
   44 00000000         ; RAM Area
   45 00000000                 AREA             DATA, ALIGN=2
   46 00000000         ;-UUU-Declare  and allocate space for your Buffers 
   47 00000000         ;    and any variables (like pointers and counters) here
                       
   48 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    dataBuffer
                               SPACE            50
   49 00000032 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    timerBuffer
                               SPACE            200
   50 000000FA 00 00   NEntries
                               SPACE            2
   51 000000FC 00 00 00 
              00       dataPtr SPACE            4
   52 00000100 00 00 00 
              00       timerPtr
                               SPACE            4



ARM Macro Assembler    Page 4 


   53 00000104 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   54 00000104 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   55 00000104 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   56 00000104         ; ROM Area
   57 00000104                 IMPORT           TExaS_Init
   58 00000104                 IMPORT           SysTick_Init
   59 00000104         
   60 00000104         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   61 00000104                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   62 00000000                 THUMB
   63 00000000                 EXPORT           Start
   64 00000000         
   65 00000000         Start
   66 00000000         ; TExaS_Init sets bus clock at 80 MHz
   67 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   68 00000004         
   69 00000004 49BB            LDR              R1, =SYSCTL_RCGCGPIO_R ; 1) act
                                                            ivate clock for Por
                                                            t F AND E
   70 00000006 6808            LDR              R0, [R1]
   71 00000008 F040 0030       ORR              R0, #0x30   ; set bit 5 and 4 t
                                                            o turn on clock
   72 0000000C 6008            STR              R0, [R1]
   73 0000000E BF00            NOP
   74 00000010 BF00            NOP                          ; allow time for cl
                                                            ock to finish
   75 00000012         
   76 00000012 49B9            LDR              R1, =GPIO_PORTF_PUR_R
   77 00000014 F000 0004       AND              R0, #0x04
   78 00000018 6008            STR              R0, [R1]
   79 0000001A         
   80 0000001A 49B8            LDR              R1, =GPIO_PORTF_DIR_R ; 5) set 
                                                            direction register
   81 0000001C 6808            LDR              R0, [R1]
   82 0000001E F040 0004       ORR              R0, #0x04   ; PF2 OUTPUT
   83 00000022 6008            STR              R0, [R1]
   84 00000024         
   85 00000024 49B6            LDR              R1, =GPIO_PORTF_AFSEL_R ; 6) re
                                                            gular port function
                                                            
   86 00000026 F020 0004       BIC              R0, #0X04   ; 0 means disable a
                                                            lternate function
   87 0000002A 6008            STR              R0, [R1]
   88 0000002C         
   89 0000002C 49B5            LDR              R1, =GPIO_PORTF_DEN_R ; 7) enab
                                                            le Port F digital p
                                                            ort
   90 0000002E F040 0004       ORR              R0, #0x04   ; 1 means enable di
                                                            gital I/O
   91 00000032 6008            STR              R0, [R1]



ARM Macro Assembler    Page 5 


   92 00000034         
   93 00000034         ;PORT E INITIALIZATION 
   94 00000034         
   95 00000034 49B4            LDR              R1, =GPIO_PORTE_DIR_R ; 5) set 
                                                            direction register
   96 00000036 6808            LDR              R0, [R1]
   97 00000038 F040 0001       ORR              R0,#0X01    ;PE0 output
   98 0000003C F020 0002       BIC              R0,#0X02    ;PE1 input
   99 00000040 6008            STR              R0, [R1]
  100 00000042         
  101 00000042 49B2            LDR              R1, =GPIO_PORTE_AFSEL_R ; 6) re
                                                            gular port function
                                                            
  102 00000044 F020 0003       BIC              R0, #0X03   ; 0 means disable a
                                                            lternate function
  103 00000048 6008            STR              R0, [R1]
  104 0000004A         
  105 0000004A 49B1            LDR              R1, =GPIO_PORTE_DEN_R
  106 0000004C 6808            LDR              R0,[R1]     ; 7) enable Port E 
                                                            digital port
  107 0000004E F040 0003       ORR              R0, #0X03   ; 1 means enable di
                                                            gital I/O
  108 00000052 6008            STR              R0, [R1]
  109 00000054         
  110 00000054 F06F 407F       MOV              R0, #0X00FFFFFF
  111 00000058 F5A0 0070       SUB              R0, #0X00F00000
  112 0000005C F500 4070       ADD              R0, #0X0000F000
  113 00000060 F500 4070       ADD              R0, #0X0000F000
  114 00000064 F500 4C70       ADD              R12, R0, #0X0000F000
  115 00000068 F04F 0002       MOV              R0, #2
  116 0000006C FB0C FC00       MUL              R12, R0
  117 00000070         
  118 00000070 F04F 0005       MOV              R0, #5
  119 00000074 FBBC F1F0       UDIV             R1,R12,R0
  120 00000078 F04F 0801       MOV              R8,#1
  121 0000007C F04F 0900       MOV              R9,#0
  122 00000080         
  123 00000080 F64F 7A78       MOV              R10, #0xFF78
  124 00000084 F04F 0B00       MOV              R11, #0
  125 00000088         
  126 00000088         
  127 00000088         
  128 00000088         
  129 00000088         
  130 00000088         
  131 00000088         
  132 00000088 E92D 4100       PUSH             {R8,LR}
  133 0000008C         
  134 0000008C F000 F8EC       BL               Debug_Init
  135 00000090         ;place your initializations here
  136 00000090 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  137 00000092         
  138 00000092         
  139 00000092         
  140 00000092         
  141 00000092         
  142 00000092         



ARM Macro Assembler    Page 6 


  143 00000092 E8BD 4100 
                       loop    POP              {R8, LR}
  144 00000096         
  145 00000096 489F            LDR              R0,=GPIO_PORTF_DATA_R
  146 00000098 6801            LDR              R1,[R0]
  147 0000009A F081 0104       EOR              R1,#0X04    ;TOGGLE HEAQRTBEAT
  148 0000009E 6001            STR              R1,[R0]
  149 000000A0         
  150 000000A0         
  151 000000A0         
  152 000000A0         skip
  153 000000A0 4E9D            LDR              R6,=GPIO_PORTE_DATA_R
  154 000000A2 6837            LDR              R7, [R6]
  155 000000A4 F007 0702       AND              R7, R7, #0x02 ;ISOLATE PE1 BIT
  156 000000A8 2F00            CMP              R7,#0
  157 000000AA D009            BEQ              compare     ;IF PE1 BIT IS 0, B
                                                            RANCH TO TELL WHICH
                                                             DATA CYCLE TO USE
  158 000000AC F000 F8FC       BL               Debug_Capture
  159 000000B0 4E99    button  LDR              R6,=GPIO_PORTE_DATA_R
  160 000000B2 6837            LDR              R7, [R6]
  161 000000B4 454F            CMP              R7, R9
  162 000000B6 D1FB            BNE              button      ;IF PE1 BIT IS 1, W
                                                            AIT UNTIL BUTTON IS
                                                             RELEASED AND PE1 B
                                                            IT IS 0
  163 000000B8 F04F 0B07       MOV              R11,#7
  164 000000BC F108 0801       ADD              R8, R8, #1  ;INCREMENT R8 TO PO
                                                            INT TO NEXT DUTY CY
                                                            CLE
  165 000000C0         
  166 000000C0 F108 0800 
                       compare ADD              R8, R8, #0
  167 000000C4 45C8            CMP              R8,R9
  168 000000C6 D014            BEQ              zero
  169 000000C8         
  170 000000C8 F1A8 0801       SUB              R8, R8, #1
  171 000000CC 45C8            CMP              R8, R9
  172 000000CE D021            BEQ              twenty
  173 000000D0         
  174 000000D0 F1A8 0801       SUB              R8, R8, #1
  175 000000D4 45C8            CMP              R8, R9
  176 000000D6 D03E            BEQ              fourty
  177 000000D8         
  178 000000D8 F1A8 0801       SUB              R8, R8, #1
  179 000000DC 45C8            CMP              R8, R9
  180 000000DE D05E            BEQ              sixty
  181 000000E0         
  182 000000E0 F1A8 0801       SUB              R8, R8, #1
  183 000000E4 45C8            CMP              R8, R9
  184 000000E6 D07E            BEQ              eighty
  185 000000E8         
  186 000000E8 F1A8 0801       SUB              R8, R8, #1
  187 000000EC 45C8            CMP              R8, R9
  188 000000EE D055            BEQ              hundo
  189 000000F0         
  190 000000F0 E7FF            B                zero
  191 000000F2         
  192 000000F2         



ARM Macro Assembler    Page 7 


  193 000000F2         
  194 000000F2         
  195 000000F2         
  196 000000F2         
  197 000000F2         
  198 000000F2 F000 0000 
                       zero    AND              R0,#0
  199 000000F6 4460            ADD              R0,R12      ; PUT MUGUFFIN IN R
                                                            0
  200 000000F8 3801    zeroL   SUBS             R0,#1
  201 000000FA D5FD            BPL              zeroL
  202 000000FC F1BB 0F00       CMP              R11,#0
  203 00000100 DD03            BLE              skip_Z1
  204 00000102 F000 F8D1       BL               Debug_Capture
  205 00000106 F1AB 0B01       sub              r11,#1
  206 0000010A F04F 0800 
                       skip_Z1 MOV              R8,#0
  207 0000010E E92D 4100       PUSH             {R8, LR}
  208 00000112 E7BE            B                loop
  209 00000114         
  210 00000114 4880    twenty  LDR              R0,=GPIO_PORTE_DATA_R 
                                                            ;get data adress
  211 00000116 6804            LDR              R4,[R0]     ;LOAD DATA INTO R4
  212 00000118 F044 0401       ORR              R4,#0X01    ;TURN PE0 ON 
  213 0000011C 6004            STR              R4,[R0]     ;STORE DATA
  214 0000011E F1BB 0F00       CMP              R11,#0
  215 00000122 DD03            BLE              skip_T1
  216 00000124 F000 F8C0       BL               Debug_Capture
  217 00000128 F1AB 0B01       sub              r11,#1
  218 0000012C 4B7B    skip_T1 LDR              R3,=0X000845D8 ;INCREMENT ONCOU
                                                            NTER
  219 0000012E 3B01    twentyon
                               SUBS             R3,#1       ;DELAY WHILE ON
  220 00000130 D5FD            BPL              twentyon    ;
  221 00000132 F004 04FE       AND              R4,#0XFE    ;turn off PE0
  222 00000136 6004            STR              R4,[R0]     ;store data
  223 00000138 F1BB 0F00       CMP              R11,#0
  224 0000013C DD03            BLE              skip_T2
  225 0000013E F000 F8B3       BL               Debug_Capture
  226 00000142 F1AB 0B01       sub              r11,#1
  227 00000146 4A76    skip_T2 LDR              R2,=0X00211760 ;decrement offco
                                                            unter
  228 00000148 3A01    twentyoff
                               SUBS             R2,#1       ;DELAY WHILE OFF
  229 0000014A D5FD            BPL              twentyoff
  230 0000014C F04F 0801       MOV              R8,#1
  231 00000150 E92D 4100       PUSH             {R8, LR}
  232 00000154 E79D            B                loop
  233 00000156         
  234 00000156 4870    fourty  LDR              R0,=GPIO_PORTE_DATA_R 
                                                            ;get data address
  235 00000158 6804            LDR              R4,[R0]     ;LOAD DATA INTO R4
  236 0000015A F044 0401       ORR              R4,#0X01    ;TURN PE0 ON 
  237 0000015E 6004            STR              R4,[R0]     ;STORE DATA
  238 00000160 F1BB 0F00       CMP              R11,#0
  239 00000164 DD03            BLE              skip_F1
  240 00000166 F000 F89F       BL               Debug_Capture
  241 0000016A F1AB 0B01       sub              r11,#1
  242 0000016E 4B6D    skip_F1 LDR              R3,=0X000AFC80



ARM Macro Assembler    Page 8 


  243 00000170 440B            ADD              R3,R3,R1    ;INCREMENT ONCOUNTE
                                                            R
  244 00000172 4B6D            LDR              R3,=0X000AdC80
  245 00000174 3B01    fourtyon
                               SUBS             R3,#1       ;DELAY WHILE ON
  246 00000176 D5FD            BPL              fourtyon    ;
  247 00000178 F004 04FE       AND              R4,#0XFE    ;turn off PE0
  248 0000017C 6004            STR              R4,[R0]     ;store data
  249 0000017E F1BB 0F00       CMP              R11,#0
  250 00000182 DD03            BLE              skip_F2
  251 00000184 F000 F890       BL               Debug_Capture
  252 00000188 F1AB 0B01       sub              r11,#1
  253 0000018C 4A67    skip_F2 LDR              R2,=0X00EA600
  254 0000018E 3A01    fourtyoff
                               SUBS             R2,#1       ;DELAY WHILE OFF
  255 00000190 D5FD            BPL              fourtyoff
  256 00000192 F04F 0802       MOV              R8,#2
  257 00000196 E92D 4100       PUSH             {R8, LR}
  258 0000019A E77A            B                loop
  259 0000019C         
  260 0000019C         
  261 0000019C E04D    hundo   b                hundoLink
  262 0000019E         
  263 0000019E         
  264 0000019E 485E    sixty   LDR              R0,=GPIO_PORTE_DATA_R 
                                                            ;get data address
  265 000001A0 6804            LDR              R4,[R0]     ;LOAD DATA INTO R4
  266 000001A2 F044 0401       ORR              R4,#0X01    ;TURN PE0 ON 
  267 000001A6 6004            STR              R4,[R0]     ;STORE DATA
  268 000001A8 F1BB 0F00       CMP              R11,#0
  269 000001AC DD03            BLE              skip_S1
  270 000001AE F000 F87B       BL               Debug_Capture
  271 000001B2 F1AB 0B01       sub              r11,#1
  272 000001B6 EBAC 0301 
                       skip_S1 SUB              R3,R12,R1   ;INCREMENT ONCOUNTE
                                                            R
  273 000001BA 4B5D            LDR              R3,=0X001B0210
  274 000001BC 3B01    sixtyon SUBS             R3,#1       ;DELAY WHILE ON
  275 000001BE D5FD            BPL              sixtyon     ;
  276 000001C0 F004 04FE       AND              R4,#0XFE    ;turn off PE0
  277 000001C4 6004            STR              R4,[R0]     ;store data
  278 000001C6 F1BB 0F00       CMP              R11,#0
  279 000001CA DD03            BLE              skip_S2
  280 000001CC F000 F86C       BL               Debug_Capture
  281 000001D0 F1AB 0B01       sub              r11,#1
  282 000001D4 4A57    skip_S2 LDR              R2,=0X000BB1B0
  283 000001D6 4A58            LDR              R2,=0X00120160 ;decrement offco
                                                            unter
  284 000001D8 3A01    sixtyoff
                               SUBS             R2,#1       ;DELAY WHILE OFF
  285 000001DA D5FD            BPL              sixtyoff
  286 000001DC F04F 0803       MOV              R8,#3
  287 000001E0 E92D 4100       PUSH             {R8, LR}
  288 000001E4 E755            B                loop
  289 000001E6         
  290 000001E6 484C    eighty  LDR              R0,=GPIO_PORTE_DATA_R 
                                                            ;get data address
  291 000001E8 6804            LDR              R4,[R0]     ;LOAD DATA INTO R4
  292 000001EA F044 0401       ORR              R4,#0X01    ;TURN PE0 ON 



ARM Macro Assembler    Page 9 


  293 000001EE 6004            STR              R4,[R0]     ;STORE DATA
  294 000001F0 F1BB 0F00       CMP              R11,#0
  295 000001F4 DD03            BLE              skip_E1
  296 000001F6 F000 F857       BL               Debug_Capture
  297 000001FA F1AB 0B01       sub              r11,#1
  298 000001FE EBAC 0301 
                       skip_E1 SUB              R3,R12,R1   ;INCREMENT ONCOUNTE
                                                            R
  299 00000202 EBA3 0301       SUB              R3, R3, R1
  300 00000206 F04F 0600       LDR              R6,=0X00000000
  301 0000020A 4B4C            LDR              R3,=0X00186A00
  302 0000020C         
  303 0000020C         
  304 0000020C 3B01    eightyon
                               SUBS             R3,#1       ;DELAY WHILE ON
  305 0000020E D5FD            BPL              eightyon    ;
  306 00000210 F004 04FE       AND              R4,#0XFE    ;turn off PE0
  307 00000214 6004            STR              R4,[R0]     ;store data
  308 00000216 F1BB 0F00       CMP              R11,#0
  309 0000021A DD03            BLE              skip_E2
  310 0000021C F000 F844       BL               Debug_Capture
  311 00000220 F1AB 0B01       sub              r11,#1
  312 00000224 4A46    skip_E2 LDR              R2,=0X000B71B0
  313 00000226 EB01 0201       ADD              R2,R1, R1   ;decrement offcount
                                                            er
  314 0000022A 4B46            LDR              R3,=0X00061A80
  315 0000022C 3B01    eightyoff
                               SUBS             R3,#1       ;DELAY WHILE OFF
  316 0000022E D5FD            BPL              eightyoff
  317 00000230 F04F 0804       MOV              R8,#4
  318 00000234 E92D 4100       PUSH             {R8, LR}
  319 00000238 E72B            B                loop
  320 0000023A         
  321 0000023A 4837    hundoLink
                               LDR              R0,=GPIO_PORTE_DATA_R 
                                                            ;get data address
  322 0000023C 6804            LDR              R4,[R0]
  323 0000023E F044 0401       ORR              R4,#0X01
  324 00000242 6004            STR              R4,[R0]     ;TURN ON PE0CMP R11
                                                            ,#0
  325 00000244 F1BB 0F00       CMP              R11,#0
  326 00000248 DD03            BLE              skip_hund
  327 0000024A F000 F82D       BL               Debug_Capture
  328 0000024E F1AB 0B01       sub              r11,#1
  329 00000252 4663    skip_hund
                               MOV              R3,R12
  330 00000254 3B01    hundoL  SUBS             R3,#1
  331 00000256 D5FD            BPL              hundoL
  332 00000258 F004 04FE       AND              R4,#0XFE    ;turn off PE0
  333 0000025C 6004            STR              R4,[R0]
  334 0000025E F04F 0805       MOV              R8,#5
  335 00000262 E92D 4100       PUSH             {R8, LR}
  336 00000266 E714            B                loop
  337 00000268         
  338 00000268         Debug_Init
  339 00000268 B57F            PUSH             {R0-R6,LR}
  340 0000026A 4937            LDR              R1,=dataBuffer 
                                                            ;R1 = &dataBuffer
  341 0000026C 460A            MOV              R2,R1



ARM Macro Assembler    Page 10 


  342 0000026E F102 0232       ADD              R2,#50      ;R2 = &dataBuffer +
                                                             200
  343 00000272 F04F 03FF       MOV              R3,#0XFF
  344 00000276 600B    InitLoop1
                               STR              R3,[R1]
  345 00000278 F101 0101       ADD              R1,#0X01
  346 0000027C 4291            CMP              R1,R2
  347 0000027E D1FA            BNE              InitLoop1
  348 00000280         
  349 00000280 4931            LDR              R1,=dataBuffer
  350 00000282 4A32            LDR              R2,=dataPtr
  351 00000284 6011            STR              R1,[R2]     ;[dataPtr] = &dataB
                                                            uffer
  352 00000286         
  353 00000286 4932            LDR              R1,=timerBuffer
  354 00000288 460D            MOV              R5,R1
  355 0000028A F105 05C8       ADD              R5,#0XC8
  356 0000028E F04F 34FF       MOV              R4,#0XFFFFFFFF
  357 00000292 600C    InitLoop2
                               STR              R4,[R1]
  358 00000294 F101 0104       ADD              R1,#0X04
  359 00000298 42A9            CMP              R1,R5
  360 0000029A D1FA            BNE              InitLoop2
  361 0000029C         
  362 0000029C 492C            LDR              R1,=timerBuffer
  363 0000029E 4A2D            ldr              r2,=timerPtr
  364 000002A0 6011            STR              R1,[R2]
  365 000002A2         
  366 000002A2 F7FF FFFE       BL               SysTick_Init
  367 000002A6 BD7F            pop              {R0-R6,PC}
  368 000002A8         
  369 000002A8         
  370 000002A8         
  371 000002A8         Debug_Capture
  372 000002A8 E92D 41FF       PUSH             {R0-R8,LR}
  373 000002AC         
  374 000002AC 4827            LDR              R0, =dataPtr
  375 000002AE 6802            LDR              R2, [R0]    ; R2 = pointer to D
                                                            ataBuffer
  376 000002B0         
  377 000002B0 4E25            LDR              R6, =dataBuffer
  378 000002B2 F106 0632       ADD              R6,#50      ;if entries >= 50, 
                                                            exit subroutine
  379 000002B6 42B2            CMP              R2,R6
  380 000002B8 D019            BEQ              done
  381 000002BA         
  382 000002BA 4D26            LDR              R5, =timerPtr
  383 000002BC 682F            LDR              R7, [R5]    ; R7 = pointer to T
                                                            imeBuffer
  384 000002BE         
  385 000002BE         
  386 000002BE 4B16            LDR              R3, =GPIO_PORTE_DATA_R
  387 000002C0 681B            LDR              R3, [R3]    ; R3 = pe1
  388 000002C2 EA4F 03C3       LSL              R3, #3
  389 000002C6 F023 03EF       BIC              R3,#0XEF
  390 000002CA 4C13            LDR              R4, =GPIO_PORTE_DATA_R
  391 000002CC 6824            LDR              R4, [R4]    ; R4 = pe0
  392 000002CE F024 04FE       BIC              R4,#0XFE
  393 000002D2 441C            ADD              R4, R3, R4



ARM Macro Assembler    Page 11 


  394 000002D4 7014            STRB             R4, [R2]    ; Store in DataBuff
                                                            er
  395 000002D6 F102 0201       ADD              R2, #0x01
  396 000002DA 6002            STR              R2, [R0]    ; Increment DataPt
  397 000002DC         
  398 000002DC F8DF 8078       LDR              R8, =NVIC_ST_CURRENT_R
  399 000002E0 F8D8 8000       LDR              R8, [R8]
  400 000002E4 F8C7 8000       STR              R8, [R7]    ; Store time in Tim
                                                            eBuffer
  401 000002E8 F107 0704       ADD              R7, #0x04
  402 000002EC 602F            STR              R7, [R5]    ; Increment TimePtr
                                                            
  403 000002EE E8BD 81FF 
                       done    POP              {R0-R8, PC}
  404 000002F2         
  405 000002F2         
  406 000002F2 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  407 000002F4                 END                          ; end of file
              400FE608 
              40025510 
              40025400 
              40025420 
              4002551C 
              40024400 
              40024420 
              4002451C 
              400253FC 
              400243FC 
              000845D8 
              00211760 
              000AFC80 
              000ADC80 
              000EA600 
              001B0210 
              000BB1B0 
              00120160 
              00186A00 
              000B71B0 
              00061A80 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -I"C:\Users\Austin\Desktop\SCHOOL STUFF\Freshman Spring\EE 319K\ARM
\RV31\INC" -I"C:\Users\Austin\Desktop\SCHOOL STUFF\Freshman Spring\EE 319K\ARM\
CMSIS\Include" -I"C:\Users\Austin\Desktop\SCHOOL STUFF\Freshman Spring\EE 319K\
ARM\Inc\Luminary" --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 45 in file main.s
   Uses
      None
Comment: DATA unused
NEntries 000000FA

Symbol: NEntries
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: NEntries unused
dataBuffer 00000000

Symbol: dataBuffer
   Definitions
      At line 48 in file main.s
   Uses
      At line 340 in file main.s
      At line 349 in file main.s
      At line 377 in file main.s

dataPtr 000000FC

Symbol: dataPtr
   Definitions
      At line 51 in file main.s
   Uses
      At line 350 in file main.s
      At line 374 in file main.s

timerBuffer 00000032

Symbol: timerBuffer
   Definitions
      At line 49 in file main.s
   Uses
      At line 353 in file main.s
      At line 362 in file main.s

timerPtr 00000100

Symbol: timerPtr
   Definitions
      At line 52 in file main.s
   Uses
      At line 363 in file main.s
      At line 382 in file main.s

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 000002A8

Symbol: Debug_Capture
   Definitions
      At line 371 in file main.s
   Uses
      At line 158 in file main.s
      At line 204 in file main.s
      At line 216 in file main.s
      At line 225 in file main.s
      At line 240 in file main.s
      At line 251 in file main.s
      At line 270 in file main.s
      At line 280 in file main.s
      At line 296 in file main.s
      At line 310 in file main.s
      At line 327 in file main.s

Debug_Init 00000268

Symbol: Debug_Init
   Definitions
      At line 338 in file main.s
   Uses
      At line 134 in file main.s
Comment: Debug_Init used once
InitLoop1 00000276

Symbol: InitLoop1
   Definitions
      At line 344 in file main.s
   Uses
      At line 347 in file main.s
Comment: InitLoop1 used once
InitLoop2 00000292

Symbol: InitLoop2
   Definitions
      At line 357 in file main.s
   Uses
      At line 360 in file main.s
Comment: InitLoop2 used once
Start 00000000

Symbol: Start
   Definitions
      At line 65 in file main.s
   Uses
      At line 63 in file main.s
Comment: Start used once
button 000000B0



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: button
   Definitions
      At line 159 in file main.s
   Uses
      At line 162 in file main.s
Comment: button used once
compare 000000C0

Symbol: compare
   Definitions
      At line 166 in file main.s
   Uses
      At line 157 in file main.s
Comment: compare used once
done 000002EE

Symbol: done
   Definitions
      At line 403 in file main.s
   Uses
      At line 380 in file main.s
Comment: done used once
eighty 000001E6

Symbol: eighty
   Definitions
      At line 290 in file main.s
   Uses
      At line 184 in file main.s
Comment: eighty used once
eightyoff 0000022C

Symbol: eightyoff
   Definitions
      At line 315 in file main.s
   Uses
      At line 316 in file main.s
Comment: eightyoff used once
eightyon 0000020C

Symbol: eightyon
   Definitions
      At line 304 in file main.s
   Uses
      At line 305 in file main.s
Comment: eightyon used once
fourty 00000156

Symbol: fourty
   Definitions
      At line 234 in file main.s
   Uses
      At line 176 in file main.s
Comment: fourty used once
fourtyoff 0000018E

Symbol: fourtyoff
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 254 in file main.s
   Uses
      At line 255 in file main.s
Comment: fourtyoff used once
fourtyon 00000174

Symbol: fourtyon
   Definitions
      At line 245 in file main.s
   Uses
      At line 246 in file main.s
Comment: fourtyon used once
hundo 0000019C

Symbol: hundo
   Definitions
      At line 261 in file main.s
   Uses
      At line 188 in file main.s
Comment: hundo used once
hundoL 00000254

Symbol: hundoL
   Definitions
      At line 330 in file main.s
   Uses
      At line 331 in file main.s
Comment: hundoL used once
hundoLink 0000023A

Symbol: hundoLink
   Definitions
      At line 321 in file main.s
   Uses
      At line 261 in file main.s
Comment: hundoLink used once
loop 00000092

Symbol: loop
   Definitions
      At line 143 in file main.s
   Uses
      At line 208 in file main.s
      At line 232 in file main.s
      At line 258 in file main.s
      At line 288 in file main.s
      At line 319 in file main.s
      At line 336 in file main.s

sixty 0000019E

Symbol: sixty
   Definitions
      At line 264 in file main.s
   Uses
      At line 180 in file main.s
Comment: sixty used once
sixtyoff 000001D8




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: sixtyoff
   Definitions
      At line 284 in file main.s
   Uses
      At line 285 in file main.s
Comment: sixtyoff used once
sixtyon 000001BC

Symbol: sixtyon
   Definitions
      At line 274 in file main.s
   Uses
      At line 275 in file main.s
Comment: sixtyon used once
skip 000000A0

Symbol: skip
   Definitions
      At line 152 in file main.s
   Uses
      None
Comment: skip unused
skip_E1 000001FE

Symbol: skip_E1
   Definitions
      At line 298 in file main.s
   Uses
      At line 295 in file main.s
Comment: skip_E1 used once
skip_E2 00000224

Symbol: skip_E2
   Definitions
      At line 312 in file main.s
   Uses
      At line 309 in file main.s
Comment: skip_E2 used once
skip_F1 0000016E

Symbol: skip_F1
   Definitions
      At line 242 in file main.s
   Uses
      At line 239 in file main.s
Comment: skip_F1 used once
skip_F2 0000018C

Symbol: skip_F2
   Definitions
      At line 253 in file main.s
   Uses
      At line 250 in file main.s
Comment: skip_F2 used once
skip_S1 000001B6

Symbol: skip_S1
   Definitions
      At line 272 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 269 in file main.s
Comment: skip_S1 used once
skip_S2 000001D4

Symbol: skip_S2
   Definitions
      At line 282 in file main.s
   Uses
      At line 279 in file main.s
Comment: skip_S2 used once
skip_T1 0000012C

Symbol: skip_T1
   Definitions
      At line 218 in file main.s
   Uses
      At line 215 in file main.s
Comment: skip_T1 used once
skip_T2 00000146

Symbol: skip_T2
   Definitions
      At line 227 in file main.s
   Uses
      At line 224 in file main.s
Comment: skip_T2 used once
skip_Z1 0000010A

Symbol: skip_Z1
   Definitions
      At line 206 in file main.s
   Uses
      At line 203 in file main.s
Comment: skip_Z1 used once
skip_hund 00000252

Symbol: skip_hund
   Definitions
      At line 329 in file main.s
   Uses
      At line 326 in file main.s
Comment: skip_hund used once
twenty 00000114

Symbol: twenty
   Definitions
      At line 210 in file main.s
   Uses
      At line 172 in file main.s
Comment: twenty used once
twentyoff 00000148

Symbol: twentyoff
   Definitions
      At line 228 in file main.s
   Uses
      At line 229 in file main.s
Comment: twentyoff used once



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

twentyon 0000012E

Symbol: twentyon
   Definitions
      At line 219 in file main.s
   Uses
      At line 220 in file main.s
Comment: twentyon used once
zero 000000F2

Symbol: zero
   Definitions
      At line 198 in file main.s
   Uses
      At line 168 in file main.s
      At line 190 in file main.s

zeroL 000000F8

Symbol: zeroL
   Definitions
      At line 200 in file main.s
   Uses
      At line 201 in file main.s
Comment: zeroL used once
38 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 101 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 153 in file main.s
      At line 159 in file main.s
      At line 210 in file main.s
      At line 234 in file main.s
      At line 264 in file main.s
      At line 290 in file main.s
      At line 321 in file main.s
      At line 386 in file main.s
      At line 390 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 105 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 95 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 145 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 41 in file main.s
   Uses
      At line 89 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTF_PUR_R used once
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: NVIC_ST_CTRL_R unused
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 55 in file main.s
   Uses
      At line 398 in file main.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: NVIC_ST_RELOAD_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 42 in file main.s
   Uses
      At line 69 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 58 in file main.s
   Uses
      At line 366 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 57 in file main.s
   Uses
      At line 67 in file main.s
Comment: TExaS_Init used once
2 symbols
392 symbols in table
